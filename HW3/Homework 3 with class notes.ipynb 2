{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Create 100 distributions, look at docs.scipy.org"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Populating the interactive namespace from numpy and matplotlib\n"
     ]
    }
   ],
   "source": [
    "#from__future__ import print_function\n",
    "#__author__= 'mo'\n",
    "\n",
    "import pylab as pl\n",
    "import numpy \n",
    "import numpy as np\n",
    "%pylab inline\n",
    "#numpy.random.randn(10,2000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "#we are creating our distrubutions\n",
    "mymean = 100\n",
    "distributions = {} #this is how we say its empty\n",
    "\n",
    "distributions['chisq'] = np.random.chisquare(mymean,100) \n",
    "# (df, size) df=degrees of freedom\n",
    "\n",
    "distributions['normal'] = np.random.normal(mymean,50,100) \n",
    "# (loc, scale, size) loc: flt, Mean (“centre”) of the distribution, scale: flt, std (\"width\" of distr) \n",
    "\n",
    "distributions['binomial'] = np.random.binomial(10,0.5,100)\n",
    "# (n,p,size) n:number of trials, p: prob of success\n",
    "\n",
    "distributions['poisson'] = np.random.poisson(10,100)\n",
    "# (lam, size) lam: flt, interval, should be >= 0, size: int or tuple of ints\n",
    "\n",
    "distributions['standard'] = np.random.standard_t(mymean,100)\n",
    "# (df, size)\n",
    "\n",
    "distributions['geometric'] = np.random.geometric(.5,100)\n",
    "# (p, size)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x107b13c90>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "pl.subplot(3,2,1)\n",
    "pl.hist(distributions['chisq'])\n",
    "pl.title('chisq')\n",
    "\n",
    "pl.subplot(3,2,2)\n",
    "pl.hist(distributions['normal'])\n",
    "pl.title('normal')\n",
    "\n",
    "pl.subplot(3,2,3)\n",
    "pl.hist(distributions['binomial'])\n",
    "pl.title('binomial')\n",
    "\n",
    "pl.subplot(3,2,4)\n",
    "pl.hist(distributions['poisson'])\n",
    "pl.title('poisson')\n",
    "\n",
    "pl.subplot(3,2,5)\n",
    "pl.hist(distributions['standard'])\n",
    "pl.title('standard')\n",
    "\n",
    "pl.subplot(3,2,6)\n",
    "pl.hist(distributions['geometric'])\n",
    "pl.title('geometric')\n",
    "\n",
    "pl.subplots_adjust(wspace=.5, hspace=.5, left= 0.125, right=.9, top=1, bottom=.1)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "chisq\n",
      "100.894225917\n",
      "13.9784978679\n",
      "normal\n",
      "99.8019302431\n",
      "49.1705458644\n",
      "binomial\n",
      "4.9\n",
      "1.51986841536\n",
      "poisson\n",
      "10.08\n",
      "3.00559478307\n",
      "standard\n",
      "-0.195486353649\n",
      "1.007420508\n",
      "geometric\n",
      "1.93\n",
      "1.15112987973\n"
     ]
    }
   ],
   "source": [
    "print ('chisq')\n",
    "print (distributions['chisq'].mean())\n",
    "print (distributions['chisq'].std())\n",
    "\n",
    "print ('normal')\n",
    "print (distributions['normal'].mean())\n",
    "print (distributions['normal'].std())\n",
    "\n",
    "print ('binomial')\n",
    "print (distributions['binomial'].mean())\n",
    "print (distributions['binomial'].std())\n",
    "\n",
    "print ('poisson')\n",
    "print (distributions['poisson'].mean())\n",
    "print (distributions['poisson'].std())\n",
    "\n",
    "print ('standard')\n",
    "print (distributions['standard'].mean())\n",
    "print (distributions['standard'].std())\n",
    "\n",
    "print ('geometric')\n",
    "print (distributions['geometric'].mean())\n",
    "print (distributions['geometric'].std())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "#plotting all means in a histogram\n",
    "#pl.hist(distributions['chisq'].mean())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "mysizes=1000/(np.array(range(1,100)+[10]))\n",
    "#lists are evil! they occupy a lot of memory, not efficient\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(array([1000,  500,  333,  250,  200,  166,  142,  125,  111,  100,   90,\n",
      "         83,   76,   71,   66,   62,   58,   55,   52,   50,   47,   45,\n",
      "         43,   41,   40,   38,   37,   35,   34,   33,   32,   31,   30,\n",
      "         29,   28,   27,   27,   26,   25,   25,   24,   23,   23,   22,\n",
      "         22,   21,   21,   20,   20,   20,   19,   19,   18,   18,   18,\n",
      "         17,   17,   17,   16,   16,   16,   16,   15,   15,   15,   15,\n",
      "         14,   14,   14,   14,   14,   13,   13,   13,   13,   13,   12,\n",
      "         12,   12,   12,   12,   12,   12,   11,   11,   11,   11,   11,\n",
      "         11,   11,   10,   10,   10,   10,   10,   10,   10,   10,   10,\n",
      "        100]), (100,))\n"
     ]
    }
   ],
   "source": [
    "print (mysizes, mysizes.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "distributions={'chisq':{}}\n",
    "for n in mysizes:\n",
    "    distributions['chisq'][n] = np.random.chisquare(mymean,n)\n",
    "#print to test\n",
    "#print (distributions['chisq'])\n",
    "    \n",
    "distributions={'normal':{}}\n",
    "for n in mysizes:\n",
    "    distributions['normal'][n] = np.random.normal(mymean,50,n)\n",
    "#print (distributions['normal'])\n",
    "    \n",
    "distributions={'binomial':{}}\n",
    "for n in mysizes:\n",
    "    distributions['binomial'][n] = np.random.normal(10,0.5,n)\n",
    "#print (distributions['binomial'])\n",
    "\n",
    "distributions={'poisson':{}}\n",
    "for n in mysizes:\n",
    "    distributions['poisson'][n] = np.random.poisson(10,n)\n",
    "#print (distributions['poisson'])\n",
    "    \n",
    "distributions={'standard':{}}\n",
    "for n in mysizes:\n",
    "    distributions['standard'][n] = np.random.standard_t(mymean,n)\n",
    "#print (distributions['standard'])\n",
    "    \n",
    "distributions={'geometric':{}}\n",
    "for n in mysizes:\n",
    "    distributions['geometric'][n] = np.random.geometric(.5,n)\n",
    "#print (distributions['geometric'])\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAlYAAAJPCAYAAAC+fJpMAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAFNtJREFUeJzt3V+IpXd9x/HPt7taEGpVAl4kEa0N1hYUFWNaWxxR6JoL\nAxYqqVrUgqEQ6Z2pXti5aYt3IkIaQhSvuhdVaFpCglQHRTQaMFHrrmRrA7uJiP+R4sUu+fZijul0\n3J1zZvc7O3Pc1wsGznOe3zznBz/m8OZ5Hp6p7g4AAFfuNw57AgAAvy6EFQDAEGEFADBEWAEADBFW\nAABDhBUAwJClYVVVn6iq71fVN/cY87GqeryqHquqV81OEQBgPaxyxuqTSU5camdV3Zrkd7v7piTv\nS3L30NwAANbK0rDq7i8m+ckeQ96a5FOLsQ8neV5VvXBmegAA62PiHqvrk5zdsX0uyQ0DxwUAWCtT\nN6/Xrm3/JwcAuOYcHzjGk0lu3LF9w+K9/6eqxBYAsDa6e/eJo6Umwur+JHcmOVlVtyT5aXd//2ID\n/cPn9bW5uZnNzc3DngaXwdqtN+u3vqzdeqvad1MlWSGsquqfk7whyXVVdTbJ3yV5VpJ09z3d/UBV\n3VpVZ5L8T5L3XNZMAADW3NKw6u7bVxhz58x0AADWlyevs5KNjY3DngKXydqtN+u3vqzdtamu1n1P\nVdXusQIA1kFVXdbN685YAQAMEVYAAEOEFQDAEGEFADBEWAEADBFWAABDhBUAwBBhBQAwRFgBAAwR\nVgAAQ4QVAMAQYQUAMERYAQAMEVYAAEOEFQDAEGEFADBEWAEADBFWAABDhBUAwBBhBQAwRFgBAAwR\nVgAAQ4QVAMAQYQUAMERYAQAMEVYAAEOEFQDAEGEFADBEWAEADBFWAABDhBUAwBBhBQAwRFgBAAwR\nVgAAQ4QVAMAQYQUAMERYAQAMEVYAAEOEFQDAEGEFADBEWAEADBFWAABDhBUAwBBhBQAwRFgBAAwR\nVgAAQ4QVAMAQYQUAMERYAQAMEVYAAEOEFQDAEGEFADBEWAEADBFWAABDhBUAwBBhBQAwRFgBAAwR\nVgAAQ4QVAMAQYQUAMERYAQAMEVYAAEOEFQDAEGEFADBEWAEADBFWAABDhBUAwBBhBQAwRFgBAAwR\nVgAAQ4QVAMAQYQUAMERYAQAMEVYAAEOEFQDAEGEFADBEWAEADBFWAABDhBUAwBBhBQAwRFgBAAwR\nVgAAQ4QVAMAQYQUAMERYAQAMEVYAAEOEFQDAEGEFADBEWAEADBFWAABDhBUAwBBhBQAwRFgBAAwR\nVgAAQ4QVAMAQYQUAMERYAQAMEVYAAEOEFQDAEGEFADBEWAEADFkaVlV1oqpOV9XjVXXXRfZfV1UP\nVtWjVfWtqnr3gcwUAOCIq+6+9M6qY0m+k+TNSZ5M8rUkt3f3qR1jNpP8Znd/sKquW4x/YXdf2HWs\n3uuzAACOiqpKd9d+f2/ZGaubk5zp7ie6+3ySk0lu2zXme0meu3j93CQ/2h1VAADXguNL9l+f5OyO\n7XNJXrdrzL1JPldVTyX5rSR/Pjc9AID1sSysVrl296Ekj3b3RlW9NMlnq+qV3f3z3QM3Nzefeb2x\nsZGNjY19TBUA4GBsbW1la2vrio+z7B6rW5JsdveJxfYHkzzd3R/ZMeaBJH/f3V9abP9Hkru6+5Fd\nx3KPFQCwFg7qHqtHktxUVS+uqmcneXuS+3eNOZ3tm9tTVS9M8rIk393vRAAA1t2elwK7+0JV3Znk\noSTHktzX3aeq6o7F/nuS/EOST1bVY9kOtQ90948PeN4AAEfOnpcCRz/IpUAAYE0c1KVAAABWJKwA\nAIYIKwCAIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAAhggrAIAhwgoAYIiwAgAYIqwA\nAIYIKwCAIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAAhggrAIAhwgoAYIiwAgAYIqwA\nAIYIKwCAIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAAhggrAIAhwgoAYIiwAgAYIqwA\nAIYIKwCAIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAAhggrAIAhwgoAYIiwAgAYIqwA\nAIYIKwCAIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAAhggrAIAhwgoAYIiwAgAYIqwA\nAIYIKwCAIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAAhggrAIAhwgoAYIiwAgAYIqwA\nAIYIKwCAIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAAhggrAIAhwgoAYIiwAgAYIqwA\nAIYIKwCAIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAAhggrAIAhwgoAYIiwAgAYIqwA\nAIYIKwCAIcIKAGCIsAIAGCKsAACGLA2rqjpRVaer6vGquusSYzaq6utV9a2q2hqfJQDAGqjuvvTO\nqmNJvpPkzUmeTPK1JLd396kdY56X5EtJ/rS7z1XVdd39w4scq/f6LACAo6Kq0t21399bdsbq5iRn\nuvuJ7j6f5GSS23aN+Yskn+7uc0lysagCALgWLAur65Oc3bF9bvHeTjcleUFVfb6qHqmqd01OEABg\nXRxfsn+Va3fPSvLqJG9K8pwkX66qr3T341c6OQCAdbIsrJ5McuOO7RuzfdZqp7NJftjdv0jyi6r6\nQpJXJvmVsNrc3Hzm9cbGRjY2NvY/YwCAYVtbW9na2rri4yy7ef14tm9ef1OSp5J8Nb968/rvJfl4\nkj9N8ptJHk7y9u7+9q5juXkdAFgLl3vz+p5nrLr7QlXdmeShJMeS3Nfdp6rqjsX+e7r7dFU9mOQb\nSZ5Ocu/uqAIAuBbsecZq9IOcsQIA1sRBPW4BAIAVCSsAgCHCCgBgiLACABgirAAAhggrAIAhwgoA\nYIiwAgAYIqwAAIYIKwCAIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAAhggrAIAhwgoA\nYIiwAgAYIqwAAIYIKwCAIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAAhggrAIAhwgoA\nYIiwAgAYIqwAAIYIKwCAIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAAhggrAIAhwgoA\nYIiwAgAYIqwAAIYIKwCAIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAAhggrAIAhwgoA\nYIiwAgAYIqwAAIYIKwCAIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAAhggrAIAhwgoA\nYIiwAgAYIqwAAIYIKwCAIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAAhggrAIAhwgoA\nYIiwAgAYIqwAAIYIKwCAIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAAhggrAIAhwgoA\nYIiwAgAYIqwAAIYIKwCAIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAAhggrAIAhwgoA\nYMjSsKqqE1V1uqoer6q79hj32qq6UFVvm50iAMB62DOsqupYko8nOZHk95PcXlUvv8S4jyR5MEkd\nwDwBAI68ZWesbk5ypruf6O7zSU4mue0i496f5F+S/GB4fgAAa2NZWF2f5OyO7XOL955RVddnO7bu\nXrzVY7MDAFgjy8JqlUj6aJK/7e7O9mVAlwIBgGvS8SX7n0xy447tG7N91mqn1yQ5WVVJcl2St1TV\n+e6+f/fBNjc3n3m9sbGRjY2N/c8YAGDY1tZWtra2rvg4tX2i6RI7q44n+U6SNyV5KslXk9ze3acu\nMf6TSf6tuz9zkX2912cBABwVVZXu3vdVuD3PWHX3haq6M8lDSY4lua+7T1XVHYv991zWbAEAfg3t\necZq9IOcsQIA1sTlnrHy5HUAgCHCCgBgiLACABgirAAAhggrAIAhwgoAYIiwAgAYIqwAAIYIKwCA\nIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAAhggrAIAhwgoAYIiwAgAYIqwAAIYIKwCA\nIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAAhggrAIAhwgoAYIiwAgAYIqwAAIYIKwCA\nIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAAhggrAIAhwgoAYIiwAgAYIqwAAIYIKwCA\nIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAAhggrAIAhwgoAYIiwAgAYIqwAAIYIKwCA\nIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAAhggrAIAhwgoAYIiwAgAYIqwAAIYIKwCA\nIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAAhggrAIAhwgoAYIiwAgAYIqwAAIYIKwCA\nIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAAhggrAIAhwgoAYIiwAgAYIqwAAIYIKwCA\nIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAAhggrAIAhwgoAYIiwAgAYslJYVdWJqjpd\nVY9X1V0X2f+Oqnqsqr5RVV+qqlfMTxUA4Gir7t57QNWxJN9J8uYkTyb5WpLbu/vUjjF/mOTb3f2z\nqjqRZLO7b9l1nF72WQAAR0FVpbtrv7+3yhmrm5Oc6e4nuvt8kpNJbts5oLu/3N0/W2w+nOSG/U4E\nAGDdrRJW1yc5u2P73OK9S/mrJA9cyaQAANbR8RXGrHz9rqremOS9SV5/sf2bm5vPvN7Y2MjGxsaq\nhwYAODBbW1vZ2tq64uOsco/VLdm+Z+rEYvuDSZ7u7o/sGveKJJ9JcqK7z1zkOO6xAgDWwkHeY/VI\nkpuq6sVV9ewkb09y/64Pf1G2o+qdF4sqAIBrwdJLgd19oaruTPJQkmNJ7uvuU1V1x2L/PUk+nOT5\nSe6uqiQ53903H9y0AQCOnqWXAsc+yKVAAGBNHOSlQAAAViCsAACGCCsAgCHCCgBgiLACABgirAAA\nhggrAIAhwgoAYIiwAgAYIqwAAIYIKwCAIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAA\nhggrAIAhwgoAYIiwAgAYIqwAAIYIKwCAIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAA\nhggrAIAhwgoAYIiwAgAYIqwAAIYIKwCAIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAA\nhggrAIAhwgoAYIiwAgAYIqwAAIYIKwCAIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAA\nhggrAIAhwgoAYIiwAgAYIqwAAIYIKwCAIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAA\nhggrAIAhwgoAYIiwAgAYIqwAAIYIKwCAIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAA\nhggrAIAhwgoAYIiwAgAYIqwAAIYIKwCAIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAA\nhggrAIAhwgoAYIiwAgAYIqwAAIYIKwCAIcIKAGCIsAIAGCKsAACGCCsAgCHCCgBgiLACABgirAAA\nhiwNq6o6UVWnq+rxqrrrEmM+ttj/WFW9an6aAABH355hVVXHknw8yYkkv5/k9qp6+a4xtyb53e6+\nKcn7ktx9QHPlEG1tbR32FLhM1m69Wb/1Ze2uTcvOWN2c5Ex3P9Hd55OcTHLbrjFvTfKpJOnuh5M8\nr6peOD5TDpUviPVl7dab9Vtf1u7atCysrk9ydsf2ucV7y8bccOVTAwBYL8vCqlc8Tl3m7wEA/Nqo\n7ks3UFXdkmSzu08stj+Y5Onu/siOMf+UZKu7Ty62Tyd5Q3d/f9exxBYAsDa6e/eJo6WOL9n/SJKb\nqurFSZ5K8vYkt+8ac3+SO5OcXITYT3dH1eVODgBgnewZVt19oaruTPJQkmNJ7uvuU1V1x2L/Pd39\nQFXdWlVnkvxPkvcc+KwBAI6gPS8FAgCwuvEnr3ug6PpatnZV9Y7Fmn2jqr5UVa84jHlycav87S3G\nvbaqLlTV267m/Li0Fb83N6rq61X1rarauspTZA8rfHdeV1UPVtWji/V79yFMk4uoqk9U1fer6pt7\njNlfs3T32E+2LxeeSfLiJM9K8miSl+8ac2uSBxavX5fkK5Nz8HOga/eHSX578fqEtTs6P6us345x\nn0vy70n+7LDn7Wflv73nJfnPJDcstq877Hn72df6bSb5x1+uXZIfJTl+2HP300nyJ0leleSbl9i/\n72aZPmPlgaLra+nadfeXu/tni82H43llR8kqf3tJ8v4k/5LkB1dzcuxplbX7iySf7u5zSdLdP7zK\nc+TSVlm/7yV57uL1c5P8qLsvXMU5cgnd/cUkP9ljyL6bZTqsPFB0fa2ydjv9VZIHDnRG7MfS9auq\n67P9hf/LfzvlBsujYZW/vZuSvKCqPl9Vj1TVu67a7FhmlfW7N8kfVNVTSR5L8jdXaW5cuX03y7LH\nLeyXB4qur5XXoKremOS9SV5/cNNhn1ZZv48m+dvu7qqq/OrfIYdjlbV7VpJXJ3lTkuck+XJVfaW7\nHz/QmbGKVdbvQ0ke7e6Nqnppks9W1Su7++cHPDdm7KtZpsPqySQ37ti+Mdt1t9eYGxbvcbhWWbss\nbli/N8mJ7t7r9ClX1yrr95psP28u2b7P4y1Vdb677786U+QSVlm7s0l+2N2/SPKLqvpCklcmEVaH\nb5X1+6Mkf58k3f1fVfXfSV6W7WdFcrTtu1mmLwU+80DRqnp2th8ouvtL+/4kf5k882T3iz5QlKtu\n6dpV1YuSfCbJO7v7zCHMkUtbun7d/Tvd/ZLufkm277P6a1F1JKzyvfmvSf64qo5V1XOyfRPtt6/y\nPLm4VdbvdJI3J8ni/pyXJfnuVZ0ll2vfzTJ6xqo9UHRtrbJ2ST6c5PlJ7l6c9Tjf3Tcf1pz5Pyuu\nH0fQit+bp6vqwSTfSPJ0knu7W1gdASv+7f1Dkk9W1WPZPqHxge7+8aFNmmdU1T8neUOS66rqbJK/\ny/al98tuFg8IBQAYMv6AUACAa5WwAgAYIqwAAIYIKwCAIcIKAGCIsAIAGCKsAACGCCsAgCH/Cw+m\nfo18kM/JAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1083faed0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "means = {}\n",
    "means['chisq']={}\n",
    "means['normal']={}\n",
    "means['binomial']={}\n",
    "means['poisson']={}\n",
    "means['standard']={}\n",
    "means['geometric']={}\n",
    "\n",
    "\n",
    "fig_mu_N = pl.figure(figsize=(10,10))\n",
    "axchisq_mu_n = fig_mu_N.add_subplot(1,1,1)\n",
    "#1st plot \n",
    "for nn in distributions['chisq']:\n",
    "    axchisq_mu_n.plot(nn, distributions['chisq'][nn].mean(),'o')\n",
    "    axchisq_mu_n.set_xlabel('sample size')\n",
    "    axchisq_mu_n.set_ylabel('sample mean')\n",
    "    axchisq_mu_n.plot([min(mysizes),max(mysizes)],[mymean,mymean],'k')\n",
    "#keys below are also size of the sample\n",
    "#plot all of the means into a histogram, it should resemble the gaussian distribution\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x108626410>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "distributions['chisq']={} \n",
    "\n",
    "for n in mysizes:\n",
    "    distributions['chisq'][n] = np.random.chisquare(mymean, size=n)\n",
    "    \n",
    "means = {}\n",
    "means['chisq'] = {}\n",
    "fig_mu_N = pl.figure(figsize=(10,10))\n",
    "axchisq_mu_n = fig_mu_N.add_subplot(111)\n",
    "for nn in distributions['chisq'].iterkeys():\n",
    "    means['chisq'][nn] = distributions['chisq'][nn].mean()\n",
    "    #and plot it\n",
    "    axchisq_mu_n.plot(nn, means['chisq'][nn], 'o')\n",
    "    axchisq_mu_n.set_xlabel('sample size')\n",
    "    axchisq_mu_n.set_ylabel('sample mean')\n",
    "    axchisq_mu_n.plot([min(mysizes), max(mysizes)],[mymean,mymean], 'k')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAmwAAAJeCAYAAAAJJ1mDAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzt3Xu83XV95/v3hyQkIdyLDaikMBmopVKLl4KtoxGVhy0W\nKHPUKu1oT+2ZedRJMmem00I5Ch2ro06nrUmr09rqoEA66tig3W0lD+I+9ExFqaAol6JBRgETRFTk\nkpDL9/yxV8JO3El2wr58V3k+H4/9yFq/vdZvfZPvZq8Xv9uq1loAAOjXIbM9AAAA9k2wAQB0TrAB\nAHROsAEAdE6wAQB0TrABAHRu2oKtqj5QVZuq6kvjlh1bVeuq6s6quraqjh73vUuq6itVdUdVnTNd\n4wIAGDbTuYXtg0leuceyi5Osa62dmuS6wf1U1WlJXpvktMFz3ltVtv4BAGQag6219ndJvrPH4vOS\nXDG4fUWSCwa3z0+yprW2tbV2d5KvJvmp6RobAMAwmemtWItba5sGtzclWTy4/fQk94x73D1JnjGT\nAwMA6NWs7XZsY5+Jta/PxfKZWQAASebO8OttqqrjW2sbq+qEJPcPlt+b5MRxj3vmYNluqkrEAQBD\no7VWU7Gemd7C9okkbxjcfkOSteOW/2JVHVpVJyc5JcnnJlpBa83XkH5ddtllsz4GX+bvqfhl7ob7\ny/wN79dUmrYtbFW1JslLkhxXVd9I8tYk70zykar61SR3J3lNkrTWbquqjyS5Lcm2JL/epvpvCgAw\npKYt2Fprr9vLt16+l8e/I8k7pms8AADDyrXOmDHLli2b7SHwJJi/4WXuhpv5I0lqmPY8VpU9pQDA\nUKiqtCE96QAAgAMk2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon\n2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gA\nADon2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAAOifYAAA6\nJ9gAADon2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAAOifY\nAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAA\n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\n/Cx8LGO7KAcLz19+/q6zRFevXpfNm+dkwYLtWb78FT9wlujqa67ZbV0TnXCwZuWa3XaLXrn0yrz+\nPa/f74kHq1evzubNm7NgwYIsX778SZ0lOnbM2thIzz9/+bSfJbpu9erM2bw52xcsyCuWL+/6hIOd\n9jffTL2RdSNZvWb1rv8+l79uuRMOgCdt53vopz71qSk7S3Sogy0Ze3P+0FvekkfuvjvbH9+eb++Y\nl22HzMsPHXponnby8XnOz/9svnnDDZmzeXPueKjla/WsLDzihF1viDn0+7t+YT/04LbUkUtyxA89\nba8BNIzWj6yfMAgBgOlTVYINAKBnUxlsQ3sMGwDAU4VgAwDonGADAOicYAMA6JxgAwDonGADAOic\nYAMA6JxgAwDonGADAOicYAMA6JxgAwDonGADAOicYAMA6JxgAwDonGADAOicYAMA6JxgAwDonGAD\nAOicYAMA6JxgAwDonGADAOicYAMA6JxgAwDonGADAOicYAMA6JxgAwDonGADAOicYAMA6JxgAwDo\nnGADAOicYAMA6JxgAwDonGADAOicYAMA6JxgAwDonGADAOicYAMA6JxgAwDonGADAOicYAMA6Jxg\nAwDonGADAOicYAMA6JxgAwDonGADAOhcV8FWVa+sqjuq6itV9VuzPR4AgB50E2xVNSfJHyV5ZZLT\nkryuqn5sdkfFVBodHZ3tIfAkmL/hZe6Gm/kj6SjYkvxUkq+21u5urW1N8hdJzp/lMTGF/NIZbuZv\neJm74Wb+SPoKtmck+ca4+/cMlgEAPKX1FGxttgcAANCjaq2PTqqqs5Jc3lp75eD+JUl2tNbeNe4x\nfQwWAGASWms1FevpKdjmJvnHJC9Lcl+SzyV5XWvt9lkdGADALJs72wPYqbW2rar+bZJPJZmT5M/F\nGgBAR1vYAACYWE8nHeyTi+r2rapOrKpPV9WtVfXlqloxWH5sVa2rqjur6tqqOnrccy4ZzOcdVXXO\n7I2enapqTlXdXFWfHNw3f0Ogqo6uqo9V1e1VdVtVnWnuhsdgPm6tqi9V1dVVNd/89auqPlBVm6rq\nS+OWHfB8VdXzBnP+lap6z/5edyiCzUV1h8LWJP93a+3Hk5yV5M2DObo4ybrW2qlJrhvcT1WdluS1\nGZvPVyZ5b1UNxc/jP3Erk9yWJ87aNn/D4T1J/rq19mNJfiLJHTF3Q6GqTkrya0me21o7PWOHBP1i\nzF/PPpixf/vxDmS+dp6E8L4kv9paOyXJKVW15zp3MyyT7KK6nWutbWytfWFw++Ekt2fsOnrnJbli\n8LArklzToYnjAAAF8klEQVQwuH1+kjWtta2ttbuTfDVj88wsqapnJvm5JH+WZOcvFPPXuao6Ksm/\naK19IBk7Hri19r2Yu2HxUMb+h/ewwcl3h2XsxDvz16nW2t8l+c4eiw9kvs6sqhOSHNFa+9zgcR8a\n95wJDUuwuajuEBn8H+MZST6bZHFrbdPgW5uSLB7cfnrG5nEnczr7/iDJf0yyY9wy89e/k5N8q6o+\nWFU3VdX7q2pRzN1QaK09mOS/Jvl6xkLtu621dTF/w+ZA52vP5fdmP/M4LMHmzIghUVWHJ/mfSVa2\n1r4//ntt7AyXfc2leZ4lVfWqJPe31m7OE1vXdmP+ujU3yXOTvLe19twkj2SwO2Ync9evqlqa5N8l\nOSljb+KHV9UvjX+M+Rsuk5ivgzIswXZvkhPH3T8xu5cpHaiqeRmLtQ+31tYOFm+qquMH3z8hyf2D\n5XvO6TMHy5gdP53kvKr6WpI1Sc6uqg/H/A2De5Lc01q7cXD/YxkLuI3mbig8P8nft9a+3VrbluTj\nSV4Y8zdsDuR35T2D5c/cY/k+53FYgu0fMnZA3klVdWjGDuD7xCyPiXEGB1H+eZLbWmt/OO5bn0jy\nhsHtNyRZO275L1bVoVV1cpJTMnaxZGZBa+23W2snttZOztgBz+tba78c89e91trGJN+oqlMHi16e\n5NYkn4y5GwZ3JDmrqhYOfo++PGMn/pi/4XJAvysH/90+NDiju5L88rjnTKibC+fui4vqDoWfSfJL\nSW6pqpsHyy5J8s4kH6mqX01yd5LXJElr7baq+kjGfjFtS/LrzUUBe7JzLszfcFie5KrB/9BuSPIr\nGftdae4611r7YlV9KGMbJnYkuSnJnyY5IuavS1W1JslLkhxXVd9I8tYc3O/KX0/y35MszNhZ3n+7\nz9c1zwAAfRuWXaIAAE9Zgg0AoHOCDQCgc4INAKBzgg0AoHOCDQCgc4INeEqrqtGqet6TXMfPV9Vv\nTdWYAPY0FBfOBZhGT/pz/1prn8zYlekBpoUtbEBXqmpRVY1U1Req6ktV9erB8rdW1ecGy/5k3ONH\nq+r3q+rGqrq9ql5QVX9ZVXdW1dsGjzmpqu6oqiur6raq+mhVLZzgtc+pqr+vqs9X1UeqatEEj1lR\nVbdW1Rer6urBsjdW1erB7S9U1c2Dr0er6l8M/k4fqKrPVtVNVXXedP37Af80CTagN69Mcm9r7Sdb\na6dn7CPpkmR1a+2nBssWVtWrBstbki2ttRckeV+Sa5L8myTPTvLGqjpm8LhTk/xxa+20JA9l7GNh\ndqmq45JcmuRlrbXnJfl8kn8/wfh+K8lPttaeM3idnWMYuzE27jMy9nE1Nyb5zGC917XWzkxydpL/\nUlWHHcw/DvDUJNiA3tyS5BVV9c6qelFr7aHB8rOr6oaquiVj0XPauOd8YvDnl5N8ubW2qbX2eJK7\nkpw4+N43WmufGdy+MsmLxj2/kpw1WOffDz4P918lWbKX8V1dVRcl2T7RX6CqTkny7iSvaa1tS3JO\nkosH6/10kvnjxgWwX45hA7rSWvtKVZ2R5Nwkv1tV12Usfv44yfNaa/dW1WVJFox72pbBnzvG3d55\nf+fvufHHqVUmPm5tXWvt9fsZ4rlJXpzk55NcWlWnD9Y3tuKqw5P8jyRvaq1tGve8C1trX9nPugEm\nZAsb0JWqOiHJ5tbaVUl+L8kZeSLOvj0IolcfxKqXVNVZg9uvT/J3477XktyQ5GeqaulgHIsGW8rG\nj62SLGmtjSa5OMlRSQ7f43U+kOSDrbX/NW7Zp5KsGLeeMw5i/MBTmC1sQG9Oz9gxXjuSbE3yb1pr\n36uq92dsl+fGJJ/dy3P3dcbnPyZ5c1V9IMmtGTve7YkntvZAVb0xyZqqmj9YfGmS8VvF5iT5cFUd\nlbGtau8ZjK0laVW1JMm/THJKVf2fg+f8apK3JfnDwe7cQzK2q9aJB8CkVWtP6mx2gO5V1UlJPjk4\nYQFg6NglCjxV+L9TYGjZwgYA0Dlb2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADr3/wPTx2z7\nom7FswAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x108669110>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "distributions['normal']={} \n",
    "\n",
    "for n in mysizes:\n",
    "    distributions['normal'][n] = np.random.normal(10,0.5,size=n)\n",
    "\n",
    "means = {}\n",
    "means['normal'] = {}\n",
    "fig_mu_N = pl.figure(figsize=(10,10))\n",
    "axchisq_mu_n = fig_mu_N.add_subplot(111)\n",
    "for nn in distributions['normal'].iterkeys():\n",
    "    means['normal'][nn] = distributions['normal'][nn].mean()\n",
    "    #and plot it\n",
    "    axchisq_mu_n.plot(nn, means['normal'][nn], 'o')\n",
    "    axchisq_mu_n.set_xlabel('sample size')\n",
    "    axchisq_mu_n.set_ylabel('sample mean')\n",
    "    axchisq_mu_n.plot([min(mysizes), max(mysizes)],[mymean,mymean], 'k')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAmwAAAJeCAYAAAAJJ1mDAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAAIABJREFUeJzt3Xu8nWV95/3vjwSSQJRDtSQgFMwDWipaPKGtoxlUYESR\nceoBqFVHnfZpm9CZp62oo9Jx9EE7Y5vE04wtPiiIVUcCdlslLzGDHfGMoiCCsQhKiZWjIAlJuJ4/\n9krYCTvJDuzDtcj7/XrllbXuve57XeHe7Hxy3YdVrbUAANCvPWZ6AAAA7JhgAwDonGADAOicYAMA\n6JxgAwDonGADAOjclAVbVZ1TVWur6rtjlh1QVauq6tqquqSq9hvztTdW1XVVdU1VHT9V4wIAGDZT\nOcP24SQnbrPszCSrWmtHJvnC4Hmq6qgkL09y1GCd91eV2T8AgExhsLXWvpTktm0Wn5zk3MHjc5Oc\nMnj84iQXtNY2tNauT/LDJE+fqrEBAAyT6Z7FOrC1tnbweG2SAwePD0rykzGv+0mSg6dzYAAAvZqx\nw45t9DOxdvS5WD4zCwAgyexpfr+1VbWgtXZzVS1M8rPB8p8mOWTM6x4zWLaVqhJxAMDQaK3VZGxn\numfYLk7yqsHjVyVZOWb5K6pqr6o6PMkRSb423gZaa34N6a+3ve1tMz4Gv+y/3fGXfTfcv+y/4f01\nmaZshq2qLkjynCSPqqobk7w1ydlJPlFVr01yfZKXJUlr7eqq+kSSq5NsTPKHbbL/pAAAQ2rKgq21\ndup2vvS87bz+nUneOVXjAQAYVu51xrRZvHjxTA+Bh8D+G1723XCz/0iSGqYjj1XlSCkAMBSqKm1I\nLzoAAGAXCTYAgM4JNgCAzgk2AIDOCTYAgM4JNgCAzgk2AIDOCTYAgM4JNgCAzgk2AIDOCTYAgM4J\nNgCAzgk2AIDOCTYAgM4JNgCAzgk2AIDOCTYAgM4JNgCAzgk2AIDOCTYAgM4JNgCAzgk2AIDOCTYA\ngM4JNgCAzgk2AIDOCTYAgM4JNgCAzgk2AIDOCTYAgM4JNgCAzgk2AIDOCTYAgM4JNgCAzgk2AIDO\nCTYAgM4JNgCAzgk2AIDOCTYAgM4JNgCAzgk2AIDOCTYAgM4JNgCAzgk2AIDOCTYAgM4JNgCAzgk2\nAIDOCTYAgM4JNgCAzgk2AIDOCTYAgM4JNgCAzgk2AIDOCTYAgM4JNgCAzgk2AIDOCTYAgM4JNgCA\nzgk2AIDOCTYAgM4JNgCAzgk2AIDOCTYAgM4JNgCAzgk2AIDOCTYAgM4JNgCAzgk2AIDOCTYAgM4J\nNgCAzgk2AIDOCTYAgM4JNgCAzgk2AIDOCTYAgM4JNgCAzgk2AIDOCTYAgM4JNgCAzgk2AIDOCTYA\ngM4JNgCAzgk2AIDOCTYAgM4JNgCAzgk2AIDOCTYAgM4JNgCAzgk2AIDOCTYAgM4JNgCAzgk2AIDO\nCTYAgM4JNgCAzgk2AIDOCTYAgM4JNgCAzgk2AIDOCTYAgM4JNgCAzgk2AIDOCTYAgM7NSLBV1Rur\n6qqq+m5Vfayq5lTVAVW1qqqurapLqmq/mRgbAEBvpj3YquqwJK9P8uTW2tFJZiV5RZIzk6xqrR2Z\n5AuD5wAAu72ZmGG7M8mGJHtX1ewkeye5KcnJSc4dvObcJKfMwNgAALoz7cHWWrs1yX9PckNGQ+32\n1tqqJAe21tYOXrY2yYHTPTYAgB7Nnu43rKpFSf4kyWFJ7kjyyar63bGvaa21qmrjrX/WWWdtebx4\n8eIsXrx4qoYKADBhq1evzurVq6dk29XauF00Zarq5Ume31p73eD5K5M8I8lxSf51a+3mqlqY5Iut\ntcdvs26b7vECADwYVZXWWk3GtmbiHLZrkjyjquZVVSV5XpKrk3wmyasGr3lVkpUzMDYAgO5M+wxb\nklTVn2c0yu5L8q0kr0vyiCSfSHJokuuTvKy1dvs265lhAwCGwmTOsM1IsD1Ygg0AGBbDfkgUAIBd\nINgAADon2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAAOifY\nAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAA\nOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon\n2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gA\nADon2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAAOifYAAA6\nJ9gAADon2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAAOifY\nAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAA\nOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon\n2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAAOifYAAA6J9gAADon2AAAOjcjwVZV+1XV\np6rq+1V1dVUdW1UHVNWqqrq2qi6pqv1mYmwAAL2ZqRm2ZUk+21r79SRPTHJNkjOTrGqtHZnkC4Pn\nAAC7vWqtTe8bVu2b5IrW2mO3WX5Nkue01tZW1YIkq1trj9/mNW26xwsA8GBUVVprNRnbmokZtsOT\n/EtVfbiqvlVVH6qqfZIc2FpbO3jN2iQHzsDYAAC6MxPBNjvJk5O8v7X25CR3Z5vDn4NpNFNpAAAZ\njafp9pMkP2mtfX3w/FNJ3pjk5qpa0Fq7uaoWJvnZeCufddZZWx4vXrw4ixcvntrRAgBMwOrVq7N6\n9eop2fa0n8OWJFV1WZLXtdauraqzkuw9+NItrbV3VdWZSfZrrZ25zXrOYQMAhsJknsM2U8H2pCR/\nk2SvJGuSvCbJrCSfSHJokuuTvKy1dvs26wk2AGAoDH2wPViCDQAYFsN+lSgAALtAsAEAdE6wAQB0\nTrABAHROsAEAdE6wAQB0TrABAHROsAEAdE6wAQB0TrABAHROsAEAdE6wAQB0TrABAHROsAEAdE6w\nAQB0TrABAHROsAEAdE6wAQB0TrABAHROsAEAdG72zl5QVY9L8qdJDhvz+tZaO24KxwUAwEC11nb8\ngqork3wgybeSbBosbq21b07x2MYbS9vZeAEAelBVaa3VZGxrpzNsSTa01j4wGW8GAMCum8g5bJ+p\nqj+qqoVVdcDmX1M+MgAAkkzskOj1SR7wotba4VM0ph2NxSFRAGAoTOYh0Z0GW08EGwAwLKb7HLZU\n1ROSHJVk7uZlrbWPTMYAAADYsYnc1uOsJM9J8htJRpL8myT/mESwAQBMg4lcdPA7SZ6X5J9ba69J\n8qQk+03pqAAA2GIiwXZPa21Tko1VtW+SnyU5ZGqHBQDAZhM5h+3rVbV/kg8l+UaSu5N8eUpHBQDA\nFrt0lWhVHZ7kEa21K6duSDt8f1eJAgBDYTKvEt3pIdGq2qOqXllVb22t/VOS26vq6ZPx5gAA7NxE\nzmF7f5JnJjlt8PyuwTIAAKbBRM5hO7a1dkxVXZEkrbVbq2rPKR4XAAADE5lhu7eqZm1+UlWPTnLf\n1A0JAICxJhJsK5JcmORXq+qdSf5Pkv93SkcFAMAWE7pKtKp+PclzB0+/0Fr7/pSOavvjcJUoADAU\npv3D3wf3YTs0o+e8tSRprX1rMgawKwQbADAspvXD36vq7UleneRH2frctX89GQMAAGDHdjrDVlXX\nJnlCa+3e6RnSDsdihg0AGArTeuPcJFcl2X8y3gwAgF03kRm2pyW5KMn3kqwfLG6ttZOneGzjjcUM\nGwAwFKb1HLYkH0lydkaDbfM5bKoJAGCaTCTY7mqtLZ/ykQAAMK6JHBJ9T0YPhV6c+w+Juq0HAMAO\nTOt92KpqdcY5BNpam/bbegg2AGBYTPuNc3sh2ACAYTHdt/UAAGAGCTYAgM4JNgCAzu002Kpqn6p6\nS1V9aPD8iKp64dQPDQCAZGIzbB9Ocm+S3xo8vynJO6ZsRAAAbGUiwbaotfaujEZbWmt3T+2QAAAY\nayLBtr6q5m1+UlWLMuYGugAATK2JfDTVWUk+l+QxVfWxJL+d5NVTOCYAAMaY0I1zq+pRSZ4xePqV\n1trPp3RU2x+HG+cCAENhWj7poKqekq0/kmrzG7bEZ4kCAOzIdAXb6ozzGaKb+SxRAIDt81miAACd\nm8xg2+lFB4MrRP8wybMyOuP2pSQfaK2tm4wBAACwYzudYauqTya5M8l5GT2P7bQk+7bWXjr1w3vA\nWMywAQBDYVoPiVbV1a21o3a2bDoINgBgWExmsE3kxrnfqqpnjnnzZyT55mS8OQAAOzeRGbZrkhyZ\n5MaMnsN2aJIfJNmYpLXWnjjVgxwzFjNsAMBQmNaLDpKcOBlvBADAgzPRTzrYP8khGRN4bpwLALB9\n031bj7dn9LNDf5TkvjFfmvYb5wIA7I4mcg7btUme0Fq7d3qGtMOxmGEDAIbCdF8lelWS/SfjzQAA\n2HUTmWF7WpKLknwvyfrB4tZaO3mKxzbeWMywAQBDYbqvEv1IkrMzGmybz2FTTQAA02QiwXZXa235\nlI8EAIBxTeSQ6Hsyeij04tx/SNRtPQAAdmC6P0t0dcY5BNpam/bbegg2AGBYTGuw9USwAQDDYrov\nOkhVvTDJUUnmbl7WWvsvkzEAAAB2bKf3Yauq/5HkZUmWJqnB41+b4nEBADAwkXPYvttaO7qqrmyt\nPbGq5if5XGvtWdMzxK3G4pAoADAUpvuTDu4Z/P7Lqjo4ycYkCybjzQEA2LmJnMP291W1f5K/TPLN\nwbIPTd2QAAAYa5euEq2qOUnmttbumLoh7fD9HRIFAIbCtB4SraqXVtUjB0//PMmHq+rJk/HmAADs\n3ETOYXtra+3OqnpWkucmOSfJB6d2WAAAbDaRYNs0+P2FST7UWvv7JHtO3ZAAABhrIsH206r6n0le\nnmSkquZOcD0AACbBRO7Dtk+SE5Nc2Vq7rqoWJjm6tXbJdAxwm7G46AAAGAo+SxQAoHPTfeNcAABm\nkGADAOicYAMA6JxgAwDonGADAOicYAMA6JxgAwDonGADAOicYAMA6JxgAwDonGADAOicYAMA6Jxg\nAwDonGADAOicYAMA6NyMBVtVzaqqK6rqM4PnB1TVqqq6tqouqar9ZmpsAAA9mckZtjOSXJ2kDZ6f\nmWRVa+3IJF8YPAcA2O3NSLBV1WOSvCDJ3ySpweKTk5w7eHxuklNmYGgAAN2ZqRm2v0ryZ0nuG7Ps\nwNba2sHjtUkOnPZRAQB0aNqDrapemORnrbUrcv/s2lZaay33HyoFANitzZ6B9/ytJCdX1QuSzE3y\nyKr6aJK1VbWgtXZzVS1M8rPxVj7rrLO2PF68eHEWL1489SMGANiJ1atXZ/Xq1VOy7RqdzJoZVfWc\nJH/aWntRVb07yS2ttXdV1ZlJ9mutnbnN69tMjhcAYKKqKq21cY8m7qoe7sO2ucDOTvL8qro2yXGD\n5wAAu70ZnWHbVWbYAIBh8XCbYQMAYAcEGwBA5wQbAEDnBBsAQOcEGwBA5wQbAEDnBBsAQOcEGwBA\n5wQbAEDnBBsAQOcEGwBA5wQbAEDnBBsAQOcEGwBA5wQbAEDnBBsAQOcEGwBA5wQbAEDnBBsAQOcE\nGwBA5wQbAEDnBBsAQOcEGwBA5wQbAEDnBBsAQOcEGwBA5wQbAEDnBBsAQOcEGwBA5wQbAEDnBBsA\nQOcEGwBA5wQbAEDnBBsAQOcEGwBA5wQbAEDnBBsAQOcEGwBA5wQbAEDnBBsAQOcEGwBA5wQbAEDn\nBBsAQOcEGwBA5wQbAEDnBBsAQOcEGwBA5wQbAEDnBBsAQOcEGwBA5wQbAEDnBBsAQOcEGwBA5wQb\nAEDnBBsAQOcEGwBA5wQbAEDnBBsAQOcEGwBA5wQbAEDnBBsAQOcEGwBA5wQbAEDnBBsAQOcEGwBA\n5wQbAEDnBBsAQOcEGwBA5wQbAEDnBBsAQOcEGwBA5wQbAEDnBBsAQOcEGwBA5wQbAEDnBBsAQOcE\nGwBA5wQbAEDnBBsAQOcEGwBA5wQbAEDnBBsAQOcEGwBA5wQbAEDnBBsAQOcEGwBA5wQbAEDnBBsA\nQOcEGwBA5wQbAEDnBBsAQOcEGwBA5wQbAEDnBBsAQOcEGwBA5wQbAEDnBBsAQOcEGwBA5wQbAEDn\nBBsAQOcEGwBA5wQbAEDnBBsAQOemPdiq6pCq+mJVXVVV36uqpYPlB1TVqqq6tqouqar9pntsAAA9\nqtba9L5h1YIkC1pr366q+Um+meSUJK9J8vPW2rur6g1J9m+tnbnNum26xwsA8GBUVVprNRnbmvYZ\nttbaza21bw8e35Xk+0kOTnJyknMHLzs3oxEHALDbm9Fz2KrqsCTHJPlqkgNba2sHX1qb5MAZGhYA\nQFdmz9QbDw6H/q8kZ7TWflF1/4xha61V1bjHPs8666wtjxcvXpzFixdP7UABACZg9erVWb169ZRs\ne9rPYUuSqtozyd8n+YfW2l8Pll2TZHFr7eaqWpjki621x2+znnPYAIChMNTnsNXoVNrfJrl6c6wN\nXJzkVYPHr0qycrrHBgDQo5m4SvRZSS5LcmWSzW/+xiRfS/KJJIcmuT7Jy1prt2+zrhk2AGAoTOYM\n24wcEn2wBBsAMCyG+pAoAAC7RrABAHROsAEAdE6wAQB0TrABAHROsAEAdE6wAQB0TrABAHROsAEA\ndE6wAQB0TrABAHROsAEAdE6wAQB0TrABAHROsAEAdE6wAQB0TrABAHROsAEAdE6wAQB0TrABAHRO\nsAEAdE6wAQB0TrABAHROsAEAdE6wAQB0TrABAHROsAEAdE6wAQB0TrABAHROsAEAdE6wAQB0TrAB\nAHROsAEAdE6wAQB0TrABAHROsAEAdE6wAQB0TrABAHROsAEAdE6wAQB0TrABAHROsAEAdE6wAQB0\nTrABAHROsAEAdE6wAQB0TrABAHROsAEAdE6wAQB0TrABAHROsAEAdE6wAQB0TrABAHROsAEAdE6w\nAQB0TrABAHROsAEAdE6wAQB0TrABAHROsAEAdE6wAQB0TrABAHROsAEAdE6wAQB0TrABAHROsAEA\ndE6wAQB0TrABAHROsAEAdE6wAQB0TrABAHROsAEAdG72TA9gslx66UhWrlyeqvVpbU5OOWVpjjvu\npJkeFgDAQ/awCLZLLx3JBReckdNPX7Nl2fnnjz7eWbSNrBrJ8o8tz/q2PnNqTpaetjQnPV/oAQD9\neFgE28qVy7eKtSQ5/fQ1ufDCFTsMtpFVIznjfWdkzTH3r7vmfaOPRRsA0Itqrc30GCasqtp4433l\nq56U177myi3Pv3P5vKw854B874ZfZq+95+Wgww/KbzzxiFx66SXZtGljZs2anT/4gz/OZ79ycX6+\n6YrM3TNZtyG5YWFyzyHJCT8+IZ8753Nbvce2M3HPfMJxufzHP836qsxpLUtPOSUnHXfcpP55R0Yu\ny/Lll2T9+tmZM2djli49Pied9OxJfY/p4HA1vTLDDkylqkprrSZjW0M9wzYyclne8Ib/mvse+ZMc\ndXny6U8nd/14Xvb5l0X5cW7Kz3Nb5t97W/a86qZ88vvfyC/vS+bPTx77i3n52LtX5MBjb80H33j/\n9t79zuT6f9grt93z85zxozPS5rQseOYR+dTn/jHf37Qq6154W+Zfmyz4yrz8440b8sv//NYkybzL\nv5Of/d478vFfOTf7L9g3pyw9JcedNBpvE/kL4dKRS7Ny+crU+kqb03LK0lNyT2bnjDM+nzVr3rHl\ndWvWvDlJtkTbyKWXZvnKlVMajQ/VQzlcvbt5uAT6sDDDDkyVkZGRLF++fFK3ObQzbCMjl+U/vu69\nuXPf63Lbs5+YPS44P7Pv2pQn53FZu8em/OC+H2Z+5uYFabl87/W5cWMyf0HyuNv3zd73PTazjr4q\nb3vnvQ94j//8f/9KXvrj/ycrDzgnV95yR25bf1zawtuS/3BJ5l+bvOAfktt/9XG55IMfTDIaa8e+\n9+t5202v27KN8xedn1OXnZp79rrnAX8hLPjfj83ChU/PIx/1q5nTWo5b8Nj88Jyrcvqa07da/9uP\nnJ1vXPGBB4zvhBPeks997u0ZufTSnHHBBVlz+v3rLTr//Cw79dQHRNt4Qbg5KLdn8zfb+vXrM2fO\nnCxdujQnnbTrf4ktXXpCXvKSSx6w/MILT8iyZZ8bZ42H7rKRkVyyfHlmr1+fjXPm5PilS/PsBzH2\n6TQyctkDAn3Rojdn2bITRNsUOeE1J+SSwx74vTneDDvARI2MjOSMM87ImjWjf/fv9jNsy5dfkn1v\nviMHHdjyv6+4OrlrU55ald9sc/PxOWuSe+bn8TU7f9duz6MqyaOSBbPnZdOso/JrCzdk1pEPjLUk\nWTDvEblw0X/LdbfemlvXPTXJx5M9FydJHv/V5O9uSxYfOnfL6w/99De2irXLc3m+vebb+ewrP5v1\nj1mfW/7dLfdv/MZ5uXn/Q3Pz639/y6Kf/e7b81c/fctWYzh9zen57P4fGnd869bNGv3zr1y5Vawl\nyZrTT8+KCy/cKtguHbk0F5xxwdZBuOb8JNlutG37zZZky+Ndjbaq9dv5yrpd2s5EXTYyks+fcUbe\nMWbsbx487jnali+/ZKtYS5I1a96RFSveItimyPo2/vfmuvum5nsT2D0sX758q78/J8vQ3odt/frZ\n2SfrM2fdumTDhmSvudlnXqVlXWbPSrLXguwzb13etde+2ZjZyZ575JZHHJp26JGZNXdDNm0af7u3\n1K25e+6tuemmJNlndOGGOUmSfTaOPp2z7v4f6HM3zNry+PJcnvfmvflGvpGbbrspt9w5JtaS5J8P\nTZa8batF7VGHjDuO2dsJmrlzRwe+vsYP9m3XWrl85VaxlowG4UUrLhp3/WT8b7Y1a9ZkxYoV211n\ne1qbs52vzN3O8ofmkuXLt4q1JHnHmjVZ9SDGPp3Wrx//306bA53JN6fG/96cu8fUfG8Cu4f167c3\nUfHQDG2wzZmzMXfXnVl6ww2Zd8MNyaP2yt0L78vBe92cR+6X5NG35O6F63Lx7MfmZRtOSzbMz4Z5\nc7Nuz03ZtG7PPPWpydlnb/0D+51nz8/8dQdkw4bNS+4e/e3nS5NPLsrdg79Tl95wQxb9xV8kSdbt\neX/5fTqfzk256f4NbsjW9nzgXwRj1x/rSYfNzaJFb95q2aJFb8qSJc8f/fNv51D2tu9Q67czE7uD\nSYTtfbOtW7frMw+nnLI055+/aKtl5523KC9+8ZJd3tZEzN7O2Gc9iLFPpzlzNo67fHOgM/mWnrY0\ni67Y+ntz0bcWZcmpU/O9Cewe5szZ3kTFQzO0h0SXLj0+v3flh/KR9ffkz+/elL945Lxcc2zyV3MX\nZN2znp09Vl2Qa45NHn/x3jnt3tfkkz//Ue589B254eVPzb7vuzFt5UE57HG35k+W7JdHz1qXX87a\nI1c97dQc9c9/nz333Pwu1yR5eXLv3yXXJdfMf0teseeV+fg99yRf/WpW/P7v5+raO2fPf0/OvOs/\nZcO2hfbzJJ9M8tLB8w0PjIYbXvLU/OV1y/Jnd5yxZdl5i87Ln7z9tbkns7NixVuybt2szJ27KUuW\nnLjl8NjSU07JmvPP3/octvPOy5LTTttq+23Ods5R3MEkwva+2ebO3fWZh80XFlx44YqMVuLcnHba\nkim74GDjdsa+6UGMfTotXXp81qx58zbnsL0pS5acOIOjenjbfGHBigtWZN196zJ3j7lZ8sdLXHAA\nPCRLly7NmjVrJv2w6NBedJAkR7/oN3P9I7+TIy5NZt02K/ss2JS7fzE/1/zpm3L3yg+kveDGPG7Z\nMfngbe/Jn+UT+cYjfi319C9m7nP/TQ7++EXZb68f5K7bN+YXax+dA2b/Ij968pGZ/X8dnsd+7aNZ\nu3bd4LDo/CSPz5577p+jjz48p77osbnjK1/MrHXrsmnu3Dx/yZJszLxctOKirPzaytxw2w1bD3qv\n5Fce/yt5wjFPyJ23bsw/P+LQ3Pz6/7Dly4vOOy+vf+wTctNl/7S5Z/LiJS/e6UUByehVoisuumjz\nalny4hePe8HBtuewnbfovJy27LRdOodt0aJFWbZs2YO68GA6jXcO25sWLcqJy5Z1fQ5bMnrhwYoV\nq8YE+vOdvwYwhEZGRrJixYp8/vOfn7SLDoY62E54zQn58r2X5AX/MHoxwGYvP+igfPbE5+Wu6z6b\neXM35Ngv/1aOv/sFeW9+lJvmvTA55KJkXjKvrsufv+LEnPWGpUnuD6Bb1/5TfnHtV3LH2ntS2TMH\nH3x43va2/7LTWJlI6EwksibbpSOXjp6ztgtBuPmbbd26dZk7d26WLFnSfaxtdtnISFatWLFVVPce\nawA8/EzmfdiGOthGVo3kXae/NJf9yz0PeO3Tnva0fOPl/zb50oWZf+VNOfT2g3PffXNz8/q9s/+C\ng3Pk4xZOyQzGMIcOADB5BNsYS554dFZ893sPeO1LDjoot/7O70zbLBYAwFg+6WCMfRcelIwTbL9x\n9NF5+7JlMzAiAIDJNbS39djs+KVL8+ZFW1+a/6ZFi/L8JS7NBwAeHob+kGjiJHMAoD/OYQMA6Nxk\nBtvQHxIFAHi4E2wAAJ0TbAAAnRNsAACdE2wAAJ0TbAAAnRNsAACdE2wAAJ0TbAAAnRNsAACdE2wA\nAJ0TbAAAnesq2KrqxKq6pqquq6o3zPR4AAB60E2wVdWsJO9NcmKSo5KcWlW/PrOjYjKtXr16pofA\nQ2D/DS/7brjZfyQdBVuSpyf5YWvt+tbahiQfT/LiGR4Tk8gPneFm/w0v+2642X8kfQXbwUluHPP8\nJ4NlAAC7tZ6Crc30AAAAelSt9dFJVfWMJGe11k4cPH9jkvtaa+8a85o+BgsAMAGttZqM7fQUbLOT\n/CDJc5MNDD3qAAAHOklEQVTclORrSU5trX1/RgcGADDDZs/0ADZrrW2sqj9O8vkks5L8rVgDAOho\nhg0AgPH1dNHBDrmpbt+q6pCq+mJVXVVV36uqpYPlB1TVqqq6tqouqar9xqzzxsH+vKaqjp+50bNZ\nVc2qqiuq6jOD5/bfEKiq/arqU1X1/aq6uqqOte+Gx2B/XFVV362qj1XVHPuvX1V1TlWtrarvjlm2\ny/urqp4y2OfXVdWynb3vUASbm+oOhQ1J/mNr7TeSPCPJHw320ZlJVrXWjkzyhcHzVNVRSV6e0f15\nYpL3V9VQfD8+zJ2R5Orcf9W2/TccliX5bGvt15M8Mck1se+GQlUdluT1SZ7cWjs6o6cEvSL2X88+\nnNH/9mPtyv7afBHCB5K8trV2RJIjqmrbbW5lWHaym+p2rrV2c2vt24PHdyX5fkbvo3dyknMHLzs3\nySmDxy9OckFrbUNr7fokP8zofmaGVNVjkrwgyd8k2fwDxf7rXFXtm+RftdbOSUbPB26t3RH7bljc\nmdF/8O49uPhu74xeeGf/daq19qUkt22zeFf217FVtTDJI1prXxu87iNj1hnXsASbm+oOkcG/GI9J\n8tUkB7bW1g6+tDbJgYPHB2V0P25mn868v0ryZ0nuG7PM/uvf4Un+pao+XFXfqqoPVdU+se+GQmvt\n1iT/PckNGQ2121trq2L/DZtd3V/bLv9pdrIfhyXYXBkxJKpqfpL/leSM1tovxn6tjV7hsqN9aT/P\nkKp6YZKftdauyP2za1ux/7o1O8mTk7y/tfbkJHdncDhmM/uuX1W1KMmfJDkso3+Jz6+q3x37Gvtv\nuExgfz0owxJsP01yyJjnh2TrMqUDVbVnRmPto621lYPFa6tqweDrC5P8bLB82336mMEyZsZvJTm5\nqv4pyQVJjquqj8b+GwY/SfKT1trXB88/ldGAu9m+GwpPTfLl1totrbWNST6d5Jmx/4bNrvys/Mlg\n+WO2Wb7D/TgswfaNjJ6Qd1hV7ZXRE/gunuExMcbgJMq/TXJ1a+2vx3zp4iSvGjx+VZKVY5a/oqr2\nqqrDkxyR0ZslMwNaa29qrR3SWjs8oyc8X9pae2Xsv+611m5OcmNVHTlY9LwkVyX5TOy7YXBNkmdU\n1bzBz9HnZfTCH/tvuOzSz8rB/7d3Dq7oriSvHLPOuLq5ce6OuKnuUPjtJL+b5MqqumKw7I1Jzk7y\niap6bZLrk7wsSVprV1fVJzL6g2ljkj9sbgrYk837wv4bDkuSnD/4B+2aJK/J6M9K+65zrbXvVNVH\nMjoxcV+SbyX5n0keEfuvS1V1QZLnJHlUVd2Y5K15cD8r/zDJ/5dkXkav8v7cDt/XfgYA6NuwHBIF\nANhtCTYAgM4JNgCAzgk2AIDOCTYAgM4JNgCAzgk2YLdWVaur6ikPcRsvqqo3TNaYALY1FDfOBZhC\nD/lz/1prn8nonekBpoQZNqArVbVPVY1U1ber6rtV9dLB8rdW1dcGy/7HmNevrqr3VNXXq+r7VfW0\nqrqwqq6tqrcPXnNYVV1TVedV1dVV9cmqmjfOex9fVV+uqm9W1Seqap9xXrO0qq6qqu9U1ccGy15d\nVSsGj79dVVcMfv2yqv7V4M90TlV9taq+VVUnT9V/P+DhSbABvTkxyU9ba7/ZWjs6ox9JlyQrWmtP\nHyybV1UvHCxvSda31p6W5ANJLkryB0mekOTVVbX/4HVHJnlfa+2oJHdm9GNhtqiqRyV5c5Lnttae\nkuSbSf7TOON7Q5LfbK09afA+m8cw+mB03Mdk9ONqvp7k8sF2v9BaOzbJcUn+sqr2fjD/cYDdk2AD\nenNlkudX1dlV9azW2p2D5cdV1Veq6sqMRs9RY9a5ePD795J8r7W2trV2b5IfJTlk8LUbW2uXDx6f\nl+RZY9avJM8YbPPLg8/D/b0kh25nfB+rqtOTbBrvD1BVRyR5d5KXtdY2Jjk+yZmD7X4xyZwx4wLY\nKeewAV1prV1XVcckOSnJf62qL2Q0ft6X5CmttZ9W1duSzB2z2vrB7/eNebz5+eafc2PPU6uMf97a\nqtbaaTsZ4klJnp3kRUneXFVHD7Y3uuGq+Un+LsnrWmtrx6z3ktbadTvZNsC4zLABXamqhUnWtdbO\nT/LfkhyT++PslkEQvfRBbPrQqnrG4PFpSb405mstyVeS/HZVLRqMY5/BTNnYsVWSQ1trq5OcmWTf\nJPO3eZ9zkny4tfZ/xiz7fJKlY7ZzzIMYP7AbM8MG9ObojJ7jdV+SDUn+oLV2R1V9KKOHPG9O8tXt\nrLujKz5/kOSPquqcJFdl9Hy3+1ds7edV9eokF1TVnMHiNycZOys2K8lHq2rfjM6qLRuMrSVpVXVo\nkn+X5Iiq+veDdV6b5O1J/npwOHePjB6qdeEBMGHV2kO6mh2ge1V1WJLPDC5YABg6DokCuwv/OgWG\nlhk2AIDOmWEDAOicYAMA6JxgAwDonGADAOicYAMA6JxgAwDo3P8P3QsppsCiIpcAAAAASUVORK5C\nYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x108d58e50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "distributions['binomial']={} \n",
    "\n",
    "for n in mysizes:\n",
    "    distributions['binomial'][n] = np.random.binomial(10,0.5,n)\n",
    "\n",
    "means = {}\n",
    "means['binomial'] = {}\n",
    "fig_mu_N = pl.figure(figsize=(10,10))\n",
    "axchisq_mu_n = fig_mu_N.add_subplot(111)\n",
    "for nn in distributions['binomial'].iterkeys():\n",
    "    means['binomial'][nn] = distributions['binomial'][nn].mean()\n",
    "    #and plot it\n",
    "    axchisq_mu_n.plot(nn, means['binomial'][nn], 'o')\n",
    "    axchisq_mu_n.set_xlabel('sample size')\n",
    "    axchisq_mu_n.set_ylabel('sample mean')\n",
    "    axchisq_mu_n.plot([min(mysizes), max(mysizes)],[mymean,mymean], 'k')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nJ9gAADr3/wOxa7VsFrDuBQAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1085f0cd0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "distributions['poisson']={} \n",
    "\n",
    "for n in mysizes:\n",
    "    distributions['poisson'][n] = np.random.poisson(10,n)\n",
    "\n",
    "means = {}\n",
    "means['poisson'] = {}\n",
    "fig_mu_N = pl.figure(figsize=(10,10))\n",
    "axchisq_mu_n = fig_mu_N.add_subplot(111)\n",
    "for nn in distributions['poisson'].iterkeys():\n",
    "    means['poisson'][nn] = distributions['poisson'][nn].mean()\n",
    "    #and plot it\n",
    "    axchisq_mu_n.plot(nn, means['poisson'][nn], 'o')\n",
    "    axchisq_mu_n.set_xlabel('sample size')\n",
    "    axchisq_mu_n.set_ylabel('sample mean')\n",
    "    axchisq_mu_n.plot([min(mysizes), max(mysizes)],[mymean,mymean], 'k')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 2",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
